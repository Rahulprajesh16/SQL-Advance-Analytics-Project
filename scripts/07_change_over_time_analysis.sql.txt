     /* 

             ----  Change-Over-Time Analysis-------

Purpose:
    - To track trends, growth, and changes in key metrics over time.
    - For time-series analysis and identifying seasonality.
    - To measure growth or decline over specific periods.

SQL Functions Used:
    - Date Functions: DATEPART(), DATETRUNC(), FORMAT()
    - Aggregate Functions: SUM(), COUNT(), AVG()
	*/


-- Analyse sales performance over time

--Sales performance over time based on Daily basis
  
select
order_date,
sum(sales_amount)  as Total_sales
from gold.fact_sales
where order_date is not null
group by order_date
order by order_date;

--Sales performance over time based on Years (YearlySales)

select
datepart(year,order_date) as Year,
sum(sales_amount)  as Total_sales
from gold.fact_sales
where order_date is not null
group by datepart(year,order_date)
order by datepart(year,order_date);


select
year(order_date) as Year,
sum(sales_amount)  as Total_sales,
count(distinct customer_key) as Total_customers,
sum(quantity) as Total_quantity
from gold.fact_sales
where order_date is not null
group by year(order_date)
order by year(order_date);

---Top 5 performing years based on sales

select
*
from
(
select
year(order_date) as Year,
sum(sales_amount)  as Total_sales,
ROW_NUMBER() over(order by sum(sales_amount)  desc) Ranking,
count(distinct customer_key) as Total_customers,
sum(quantity) as Total_quantity
from gold.fact_sales
where order_date is not null
group by year(order_date)

)t
where Ranking <=5

---Month wise Sales Analysis

select
month(order_date) as Order_Month,
sum(sales_amount)  as Total_sales,
count(distinct customer_key) as Total_customers,
sum(quantity) as Total_quantity
from gold.fact_sales
where order_date is not null
group by month(order_date)
order by month(order_date);

--Top 5 perfoming month based on sales analysis
select
*
from 
(select
month(order_date) as Order_Month,
sum(sales_amount)  as Total_sales,
row_number() over (order by sum(sales_amount) desc) Ranking,
count(distinct customer_key) as Total_customers,
sum(quantity) as Total_quantity
from gold.fact_sales
where order_date is not null
group by month(order_date)
)tt
where Ranking<=5



 


